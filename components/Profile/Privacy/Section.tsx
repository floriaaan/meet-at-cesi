import { useState } from "react";
import { ExtendedUser } from "@/types/User";
import {
  PrivacyForm,
  PrivacyFormValues,
} from "@/components/Profile/Privacy/Form";
import { editPrivacy, EditPrivacyRequestInput } from "@/lib/fetchers/user";
import { UserPrivacy } from "@prisma/client";

export const PrivacySection = ({ user }: { user: ExtendedUser }) => {
  const [privacy, setPrivacy] = useState<ExtendedUser["privacy"]>(
    user.privacy || undefined
  );

  async function handleSubmit(values: PrivacyFormValues) {
    return editPrivacy(values as EditPrivacyRequestInput).then((result) => {
      if (result && !(result instanceof Error)) {
        setPrivacy(result.user.privacy);
      }
      return Promise.resolve(result);
    });
  }

  return (
    <div className="flex flex-col w-full p-4 gap-y-2 scroll-mt-48" id="privacy">
      <h3 className="text-xl font-bold">üîê Confidentialit√© des donn√©es</h3>
      <p className="text-sm text-gray-700 whitespace-pre-line">
        {`Il est possible de choisir quels √©l√©ments de votre profil seront affich√©.\n
        Votre promotion, votre campus et votre ann√©e d'√©tude sont publics (voir section S√©lection du campus et de la promotion).
        Vos troph√©es, participations aux √©v√©nements et √©v√©nements que vous avez cr√©√©s sont priv√©s par d√©faut.`}
      </p>
      <PrivacyForm
        onSubmit={handleSubmit}
        initialValues={
          {
            createdEvents: privacy?.createdEvents || UserPrivacy.PRIVATE,
            participations: privacy?.participations || UserPrivacy.PRIVATE,
            trophies: privacy?.trophies || UserPrivacy.PRIVATE,
          } as PrivacyFormValues
        }
      />
    </div>
  );
};
